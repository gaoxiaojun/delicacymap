#############################################################################
# Makefile for building: delicacymapOnCE
# Generated by qmake (2.01a) (Qt 4.5.1) on: ?? 6? 17 21:49:59 2009
# Project:  delicacymapOnCE.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile delicacymapOnCE.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_WEBKIT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtWebKit -I/usr/include/qt4 -I. -I./rclib/include -I../protocol-buffer-src -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L../protocol-buffer-src/lib -L/usr/lib -lprotobuf_linux_x86 -lQtWebKit -lQtGui -lQtNetwork -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = main.cpp \
		mapview.cpp \
		bluetoothmanager.cpp \
		ConnectionManager.cpp \
		LocationSvc.cpp \
		mainwindow.cpp \
		callentry.cpp \
		Message.pb.cc \
		prototools.cpp \
		simplerpccontroller.cpp \
		streamcallbackinfo.cpp \
		twowayrpccontroller.cpp \
		twowaystream.cpp \
		../protocol-buffer-src/MapProtocol.pb.cc \
		mapview_linux.cpp moc_mapview.cpp \
		moc_ConnectionManager.cpp \
		moc_mainwindow.cpp \
		moc_simplerpccontroller.cpp \
		moc_twowaystream.cpp \
		qrc_webpage.cpp
OBJECTS       = obj/main.o \
		obj/mapview.o \
		obj/bluetoothmanager.o \
		obj/ConnectionManager.o \
		obj/LocationSvc.o \
		obj/mainwindow.o \
		obj/callentry.o \
		obj/Message.pb.o \
		obj/prototools.o \
		obj/simplerpccontroller.o \
		obj/streamcallbackinfo.o \
		obj/twowayrpccontroller.o \
		obj/twowaystream.o \
		obj/MapProtocol.pb.o \
		obj/mapview_linux.o \
		obj/moc_mapview.o \
		obj/moc_ConnectionManager.o \
		obj/moc_mainwindow.o \
		obj/moc_simplerpccontroller.o \
		obj/moc_twowaystream.o \
		obj/qrc_webpage.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		delicacymapOnCE.pro
QMAKE_TARGET  = delicacymapOnCE
DESTDIR       = 
TARGET        = delicacymapOnCE

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mapview.h ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: delicacymapOnCE.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtWebKit.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile delicacymapOnCE.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtWebKit.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile delicacymapOnCE.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/delicacymapOnCE1.0.0 || $(MKDIR) obj/delicacymapOnCE1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/delicacymapOnCE1.0.0/ && $(COPY_FILE) --parents mapview.h bluetoothmanager.h ConnectionManager.h LocationSvc.h mainwindow.h callentry.h Message.pb.h prototools.h simplerpccontroller.h streamcallbackinfo.h twowayrpccontroller.h twowaystream.h ../protocol-buffer-src/MapProtocol.pb.h obj/delicacymapOnCE1.0.0/ && $(COPY_FILE) --parents webpage.qrc obj/delicacymapOnCE1.0.0/ && $(COPY_FILE) --parents main.cpp mapview.cpp bluetoothmanager.cpp ConnectionManager.cpp LocationSvc.cpp mainwindow.cpp callentry.cpp Message.pb.cc prototools.cpp simplerpccontroller.cpp streamcallbackinfo.cpp twowayrpccontroller.cpp twowaystream.cpp ../protocol-buffer-src/MapProtocol.pb.cc mapview_linux.cpp obj/delicacymapOnCE1.0.0/ && $(COPY_FILE) --parents mapview.ui mainwindow.ui obj/delicacymapOnCE1.0.0/ && (cd `dirname obj/delicacymapOnCE1.0.0` && $(TAR) delicacymapOnCE1.0.0.tar delicacymapOnCE1.0.0 && $(COMPRESS) delicacymapOnCE1.0.0.tar) && $(MOVE) `dirname obj/delicacymapOnCE1.0.0`/delicacymapOnCE1.0.0.tar.gz . && $(DEL_FILE) -r obj/delicacymapOnCE1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mapview.cpp moc_ConnectionManager.cpp moc_mainwindow.cpp moc_simplerpccontroller.cpp moc_twowaystream.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mapview.cpp moc_ConnectionManager.cpp moc_mainwindow.cpp moc_simplerpccontroller.cpp moc_twowaystream.cpp
moc_mapview.cpp: ui_mapview.h \
		../protocol-buffer-src/MapProtocol.pb.h \
		mapview.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mapview.h -o moc_mapview.cpp

moc_ConnectionManager.cpp: ../protocol-buffer-src/MapProtocol.pb.h \
		twowaystream.h \
		callentry.h \
		streamcallbackinfo.h \
		simplerpccontroller.h \
		ConnectionManager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ConnectionManager.h -o moc_ConnectionManager.cpp

moc_mainwindow.cpp: mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_simplerpccontroller.cpp: simplerpccontroller.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) simplerpccontroller.h -o moc_simplerpccontroller.cpp

moc_twowaystream.cpp: callentry.h \
		streamcallbackinfo.h \
		twowaystream.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) twowaystream.h -o moc_twowaystream.cpp

compiler_rcc_make_all: qrc_webpage.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_webpage.cpp
qrc_webpage.cpp: webpage.qrc \
		webpages/index.htm \
		webpages/images/icon1-shadow.png \
		webpages/images/icon1.png
	/usr/bin/rcc -name webpage webpage.qrc -o qrc_webpage.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mapview.h ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mapview.h ui_mainwindow.h
ui_mapview.h: mapview.ui
	/usr/bin/uic-qt4 mapview.ui -o ui_mapview.h

ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

obj/main.o: main.cpp mainwindow.h \
		mapview.h \
		ui_mapview.h \
		../protocol-buffer-src/MapProtocol.pb.h \
		bluetoothmanager.h \
		../rclib/include/rclib/util.h \
		ConnectionManager.h \
		twowaystream.h \
		callentry.h \
		streamcallbackinfo.h \
		simplerpccontroller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/mapview.o: mapview.cpp mapview.h \
		ui_mapview.h \
		../protocol-buffer-src/MapProtocol.pb.h \
		LocationSvc.h \
		../rclib/include/rclib/util.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mapview.o mapview.cpp

obj/bluetoothmanager.o: bluetoothmanager.cpp bluetoothmanager.h \
		../rclib/include/rclib/util.h \
		bluetoothmanager_wince.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/bluetoothmanager.o bluetoothmanager.cpp

obj/ConnectionManager.o: ConnectionManager.cpp ConnectionManager.h \
		../protocol-buffer-src/MapProtocol.pb.h \
		twowaystream.h \
		callentry.h \
		streamcallbackinfo.h \
		simplerpccontroller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/ConnectionManager.o ConnectionManager.cpp

obj/LocationSvc.o: LocationSvc.cpp LocationSvc.h \
		../rclib/include/rclib/util.h \
		GPSLocationSvc_wince.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/LocationSvc.o LocationSvc.cpp

obj/mainwindow.o: mainwindow.cpp mainwindow.h \
		ui_mainwindow.h \
		mapview.h \
		ui_mapview.h \
		../protocol-buffer-src/MapProtocol.pb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mainwindow.o mainwindow.cpp

obj/callentry.o: callentry.cpp callentry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/callentry.o callentry.cpp

obj/Message.pb.o: Message.pb.cc Message.pb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Message.pb.o Message.pb.cc

obj/prototools.o: prototools.cpp prototools.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/prototools.o prototools.cpp

obj/simplerpccontroller.o: simplerpccontroller.cpp simplerpccontroller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/simplerpccontroller.o simplerpccontroller.cpp

obj/streamcallbackinfo.o: streamcallbackinfo.cpp streamcallbackinfo.h \
		twowaystream.h \
		callentry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/streamcallbackinfo.o streamcallbackinfo.cpp

obj/twowayrpccontroller.o: twowayrpccontroller.cpp twowayrpccontroller.h \
		twowaystream.h \
		callentry.h \
		streamcallbackinfo.h \
		simplerpccontroller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/twowayrpccontroller.o twowayrpccontroller.cpp

obj/twowaystream.o: twowaystream.cpp twowaystream.h \
		callentry.h \
		streamcallbackinfo.h \
		Message.pb.h \
		prototools.h \
		simplerpccontroller.h \
		twowayrpccontroller.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/twowaystream.o twowaystream.cpp

obj/MapProtocol.pb.o: ../protocol-buffer-src/MapProtocol.pb.cc ../protocol-buffer-src/MapProtocol.pb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/MapProtocol.pb.o ../protocol-buffer-src/MapProtocol.pb.cc

obj/mapview_linux.o: mapview_linux.cpp mapview.h \
		ui_mapview.h \
		../protocol-buffer-src/MapProtocol.pb.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mapview_linux.o mapview_linux.cpp

obj/moc_mapview.o: moc_mapview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_mapview.o moc_mapview.cpp

obj/moc_ConnectionManager.o: moc_ConnectionManager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_ConnectionManager.o moc_ConnectionManager.cpp

obj/moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_mainwindow.o moc_mainwindow.cpp

obj/moc_simplerpccontroller.o: moc_simplerpccontroller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_simplerpccontroller.o moc_simplerpccontroller.cpp

obj/moc_twowaystream.o: moc_twowaystream.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_twowaystream.o moc_twowaystream.cpp

obj/qrc_webpage.o: qrc_webpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/qrc_webpage.o qrc_webpage.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

