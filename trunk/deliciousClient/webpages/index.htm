<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
	<meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
	<!-- Ripped and modified from google map api v3, modify with care -->
	<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
	<!-- <script type="text/javascript" src="qrc:/webpages/main.js"></script> -->
	<script type="text/javascript" src="qrc:/webpages/markermanager.js"></script>
	<script type="text/javascript">	
	//<![CDATA[
	
	//**************************delicacymap/trunk/webpages/index.htm *******************************
	//
	//This file is used as the main page interacting with GoogleMap API,
	//loaded by mapview
	//
	//Update time: 2009-03-08
	//Updater: Alan Zhu
	//**********************************************************************************************
	
	var map;	//(type:GMap) the map instance
	var markerManager;  //(type:MarkerManager)  
	var wayPoints;  //(type: Array<GLatLng>), used in route query
	var tempMarker; //(type: GMarker), save a temp Marker instance
	var directions; //(type: GDirections), used for route query
	var route;	  //(type: GPolyLine), instance of the route polyline
	var baseIcon;   //(type: GIcon), instance of the costumized icon
	var restaurants;
	var isdragging=false;
	var infowindow;     //global info window, only one is needed.
	var mylocation;     //marker that shows current location of user
	var geocoder = new google.maps.Geocoder();
	
	function load() 
	{		
		var latlng = new google.maps.LatLng(39.96067508327288, 116.35796070098877);
		var myOptions = {
			zoom: 15,
			noClear : false,
			noResize : true,
			center: latlng,
			disableDefaultUI: true,
			navigationControl: true,
			keyboardShortcuts : true,
			navigationControlOptions: google.maps.NavigationControlStyle.LARGE,
			mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById("map"), myOptions);
		
		infowindow = new google.maps.InfoWindow({});
		
		google.maps.event.addListener(map, 'dragstart', function () {
		    isdragging = true;
		});
		google.maps.event.addListener(map, 'dragend', function () {
		    isdragging = false;
		    bound_change();
		    //google.maps.event.trigger(map, 'bounds_changed');
		});
		//google.maps.event.addListener(map, 'bounds_changed', bound_change);

		restaurants = {};
		
		var opts = {map: map,
		            position: latlng,
		            flat: true,
		            icon: 'qrc:/webpages/images/arrow.png',
		            title: '我的位置'};
		mylocation = new google.maps.Marker(opts);
		mylocation.userInfo = "<a href=function(){}>这里有餐厅</a>";
		google.maps.event.addListener(mylocation, 'click', function () {
		        infowindow.setContent(mylocation.userInfo);
		        infowindow.open(map, mylocation);
		    });
		
		//wayPoints = new Array();   
		//markerManager = new MarkerManager(map);
		//directions = new GDirections();
		   
		
		//var myMarker = createMarkerByXY(40,40,"foo");
		//myMarker.setMap(map);
	}
	
    function updateMyLocation(latitude, longitude)
    {
        mylocation.setPosition(new google.maps.LatLng(latitude, longitude));
    }

	//Init a costumized baseIcon
	//still not working, can't locate pic in src files;
	function initIcon()
	{
		try
		{
			baseIcon = new GIcon();
			baseIcon.image = "Resource Files/icon1.png";
			baseIcon.shadow = "Resource Files/icon1-shadow.png";
			//baseIcon.image = "E:\\Development\\Qt\\project\\delicacymap_bak\\webpages\\images\\icon1.png";
			//baseIcon.shadow = "E:\\Development\\Qt\\project\\delicacymap_bak\\webpages\\images\\icon1-shadow.png";
			baseIcon.iconSize = new GSize(20, 20);
			baseIcon.shadowSize = new GSize(20, 20);
			baseIcon.iconAnchor = new GPoint(10, 10);
			baseIcon.infoWindowAnchor = new GPoint(10, 10);
			baseIcon.infoShadowAnchor = new GPoint(10, 10);
		}
		catch(e)
		{
			alert(e.toString());
		}
	}
	
	//Add the new marker to the end of "wayPoints",adding one more hop,
	//then start a direction query
	function updateRoute()
	{
		wayPoints.push(tempMarker.getLatLng());
		directions.loadFromWaypoints(wayPoints,{getPolyline: true});	
	}
	
	//Redraw the route onto the map, removing the previous one in advance
	//Note:Style of the route can be modified, consider adding more parameters 
	function refreshRoute()
	{
		if (route != null)
		{
			map.removeOverlay(route);
		}
		route = directions.getPolyline();
		route.setStrokeStyle({color:"#00ff00",weight:3,opacity:0.7});
		map.addOverlay(route);
	}

	//Event listener intended binding to a single marker "click" event;
	//Will become deprecated, since marker click event can now be captured through event "map.click",
	//See also "mapClicked"
	function markerClicked()
	{
		mapListener.markerClicked();
	}
	
	//Event listener binding to the "click" event of "map"(type:GMap), 
	//"overlay"(type:GOverlay) will be valid if an overlay on the map is clicked,(Markers e.g.),
	//"latlng"(type:GLatLng) will be valid if the map tile layer is clicked, indicating the geo-position of the clicked point.
	//note:still need improvement, especially reliable methods of "overlay" type verification.
	function mapClicked(overlay,latlng)
	{
		var s;
		try
		{
			s = overlay.getTitle() + ' @ ' + overlay.getLatLng().lat()+','+overlay.getLatLng().lng();
			tempMarker = overlay;
		}
		catch (e)
		{
			try 
			{
				s = latlng.lat()+','+latlng.lng();
			}
			catch (e)
			{
				s = 'error';
			}
		}
		window.mapListener.mapClicked(s);
	}
	
	var previousbound = new google.maps.LatLngBounds();
	function bound_change() 
	{
	    if (!isdragging)
	    {
	        var curbound = map.getBounds();
	        if (!curbound.equals(previousbound))
	        {
	            previousbound = curbound;
	            mapListener.mapBoundChanged(curbound.toUrlValue());
	            geocoder.geocode( {latLng : map.getCenter(), country : 'zh-CN'}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                      mapListener.mapLocationChanged(results[0].formatted_address);
                    } else {
                      alert("Geocode was not successful for the following reason: " + status);
                    }
                  });
	        }
	    }
	}

	function addRestaurant(rid, lat, lng, title) 
	{
	    if (restaurants[rid] == null)
	    {
	        var tempRestr = makeMarkerByLatLng(lat, lng, title);
	        google.maps.event.addListener(tempRestr, 'click', function () {
		        infowindow.setContent(mapListener[rid]);
		        infowindow.open(map, tempRestr);
		    });
	        restaurants[rid] = tempRestr;
	    }
	}

	function removeRestaurant(rid)
	{
	    //alert("jj");
	    restaurants[rid].setMap(null);
	    delete resturants[rid];
	}


	//Create a marker by specifying a point on the container,result saved in the variable "tempMarker"
	//coordinates are originated from top-left,"x" increasing downwards and "y" rightwards, with units of pixel
	//markerTitle specifies the title of the marker,
	//note:more parameters are to be added, according to the additional marker options desired
	function createMarkerByXY(x,y,markerTitle)
	{
		var pos = map.fromContainerPixelToLatLng(new GPoint(x,y));
		var opts = {position:pos,
					title:markerTitle
					};
		//var opts = {icon:baseIcon, title:markerTitle};
		return new GMarker(opts);
	}
	
	//Almost the same as createMarkerByXY,
	//except that the parameters "lat","lng",specify absolute geo positions
	function makeMarkerByLatLng(lat,lng,markerTitle)
	{
		//alert("aa");
		var pos = new google.maps.LatLng(lat,lng);
		var opts = {position: pos, 
					map: map, 
					title:markerTitle
					};
		return (new google.maps.Marker(opts));
	}
	
	//]]>
	</script>
  </head>
  <body style="margin:0;padding:0;" onload="load()" onunload="GUnload()">
	<div id="map" style="width:300px;height:300px;"/>
  </body>
</html>